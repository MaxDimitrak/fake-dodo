{"ast":null,"code":"var _jsxFileName = \"/Users/maksimdimitrak/Desktop/Programming/portfolio/react_pizza/src/pages/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport qs from 'qs';\nimport { useNavigate } from 'react-router-dom';\nimport PizzaBlockSkeleton from '../components/PizzaBlock/PizzaBlockSkeleton';\nimport Categories from '../components/Categories/Categories';\nimport Sort from '../components/Sort/Sort';\nimport PizzaBlock from '../components/PizzaBlock/PizzaBlock';\nimport Pagination from '../components/Pagination/Pagination';\nimport { selectFilterer, selectSearchValue, setFilters } from '../redux/slices/filterSlice';\nimport { listName } from '../components/Sort/Sort';\nimport { fetchPizzas, selectPizzas } from '../redux/slices/pizzaSlice';\nimport { useAppDispatch } from '../redux/store';\nimport NotFoundBlock from '../components/NotFoundBlock/NotFoundBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const searchValue = useSelector(selectSearchValue);\n  const {\n    categoryId,\n    sortType,\n    currentPage\n  } = useSelector(selectFilterer);\n  const {\n    items,\n    status\n  } = useSelector(selectPizzas);\n  const skeletons = [...new Array(8)].map((_, index) => /*#__PURE__*/_jsxDEV(PizzaBlockSkeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 57\n  }, this));\n  const categories = ['Все пиццы', 'Мясные', 'Вегетарианские', 'Гриль', 'Острые', 'Cырные'];\n  const isMount = React.useRef(false);\n  const isSearch = React.useRef(false); //getting pizza\n\n  const getPizzas = async () => {\n    const order = sortType.type.includes('-') ? 'asc' : 'desc';\n    const sortBy = sortType.type.replace('-', '');\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const searchBy = searchValue ? `search=${searchValue}` : '';\n    dispatch(fetchPizzas({\n      order,\n      sortBy,\n      category,\n      searchBy,\n      currentPage\n    }));\n  }; //parse searchData from qs\n\n\n  const parseSearch = () => {\n    const queryString = qs.stringify({\n      searchValue,\n      currentPage,\n      categoryId,\n      sortType: sortType.type\n    });\n    navigate(`?${queryString}`);\n  }; //parse filters to qs\n\n\n  const setterFilters = locSearch => {\n    const params = qs.parse(locSearch.substring(1));\n    const sort = listName.find(obj => obj.type === String(params.sortType));\n\n    if (sort) {\n      params.sortType = sort;\n    }\n\n    if (!params.currentPage) {\n      params.currentPage = 1;\n    }\n\n    if (!params.categoryId) {\n      params.categoryId = 0;\n    }\n\n    dispatch(setFilters({\n      searchValue: params.searchValue,\n      currentPage: params.currentPage,\n      categoryId: params.categoryId,\n      sortType: params.sortType\n    }));\n    isSearch.current = true;\n  }; //On first render componnent. if qs has data, pasre it to setterFilters\n\n\n  React.useEffect(() => {\n    if (window.location.search) setterFilters(window.location.search);\n  }, []); //When change filter. ((TIP) On first render setterFilters change filter) if it's first render, get pizzas without search/qs params\n\n  React.useEffect(() => {\n    if (!isSearch.current) {\n      getPizzas();\n    }\n\n    window.scrollTo(0, 0);\n    isSearch.current = false;\n  }, [categoryId, sortType, currentPage, searchValue]); //When change filter. parse search data\n\n  React.useEffect(() => {\n    if (isMount.current) {\n      parseSearch();\n    }\n\n    isMount.current = true;\n  }, [categoryId, sortType, currentPage, searchValue]);\n\n  if (!listName.find(item => item.type === sortType.type) || sortType === null || !categoryId(categoryId < 0 || categoryId > 5)) {\n    return /*#__PURE__*/_jsxDEV(NotFoundBlock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"content__title\",\n      children: categories[categoryId]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this), status === 'reject' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__error-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u043F\\u0438\\u0446\\u0446 \\uD83D\\uDE15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u043F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0443 \\u043F\\u043E\\u0437\\u0436\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: status === 'loading' ? skeletons : items.map(item => /*#__PURE__*/_jsxDEV(PizzaBlock, { ...item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 67\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Home, \"osMzF/eIog6bnMlw/uV745F5Yu4=\", false, function () {\n  return [useAppDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useSelector","qs","useNavigate","PizzaBlockSkeleton","Categories","Sort","PizzaBlock","Pagination","selectFilterer","selectSearchValue","setFilters","listName","fetchPizzas","selectPizzas","useAppDispatch","NotFoundBlock","Home","dispatch","navigate","searchValue","categoryId","sortType","currentPage","items","status","skeletons","Array","map","_","index","categories","isMount","useRef","isSearch","getPizzas","order","type","includes","sortBy","replace","category","searchBy","parseSearch","queryString","stringify","setterFilters","locSearch","params","parse","substring","sort","find","obj","String","current","useEffect","window","location","search","scrollTo","item","id"],"sources":["/Users/maksimdimitrak/Desktop/Programming/portfolio/react_pizza/src/pages/Home.tsx"],"sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux';\nimport qs from 'qs'\nimport { useNavigate } from 'react-router-dom';\n\nimport PizzaBlockSkeleton from '../components/PizzaBlock/PizzaBlockSkeleton';\nimport Categories from '../components/Categories/Categories';\nimport Sort from '../components/Sort/Sort';\nimport PizzaBlock from '../components/PizzaBlock/PizzaBlock';\nimport Pagination from '../components/Pagination/Pagination';\nimport { IFilterSliceState, selectFilterer, selectSearchValue, setFilters } from '../redux/slices/filterSlice';\nimport { listName } from '../components/Sort/Sort';\nimport { fetchPizzas, selectPizzas } from '../redux/slices/pizzaSlice';\nimport { useAppDispatch } from '../redux/store';\nimport NotFoundBlock from '../components/NotFoundBlock/NotFoundBlock';\n\n\nconst Home: React.FC = () => {\n\tconst dispatch = useAppDispatch()\n\tconst navigate = useNavigate()\n\tconst searchValue = useSelector(selectSearchValue)\n\tconst { categoryId, sortType, currentPage } = useSelector(selectFilterer)\n\n\tconst { items, status } = useSelector(selectPizzas)\n\n\tconst skeletons = [... new Array(8)].map((_, index) => <PizzaBlockSkeleton key={index} />)\n\tconst categories = ['Все пиццы', 'Мясные', 'Вегетарианские', 'Гриль', 'Острые', 'Cырные']\n\tconst isMount = React.useRef(false)\n\tconst isSearch = React.useRef(false)\n\n\t//getting pizza\n\tconst getPizzas = async () => {\n\t\tconst order = sortType.type.includes('-') ? 'asc' : 'desc'\n\t\tconst sortBy = sortType.type.replace('-', '')\n\t\tconst category = categoryId > 0 ? `category=${categoryId}` : ''\n\t\tconst searchBy = searchValue ? `search=${searchValue}` : ''\n\n\n\t\tdispatch(\n\t\t\tfetchPizzas({\n\t\t\t\torder,\n\t\t\t\tsortBy,\n\t\t\t\tcategory,\n\t\t\t\tsearchBy,\n\t\t\t\tcurrentPage,\n\t\t\t}\n\t\t\t))\n\t}\n\n\t//parse searchData from qs\n\tconst parseSearch = () => {\n\t\tconst queryString = qs.stringify({\n\t\t\tsearchValue,\n\t\t\tcurrentPage,\n\t\t\tcategoryId,\n\t\t\tsortType: sortType.type,\n\t\t})\n\t\tnavigate(`?${queryString}`)\n\t}\n\n\t//parse filters to qs\n\tconst setterFilters = (locSearch: any) => {\n\t\tconst params = (qs.parse(locSearch.substring(1)) as unknown) as IFilterSliceState\n\t\tconst sort = listName.find(obj => obj.type === String(params.sortType))\n\t\tif (sort) {\n\t\t\tparams.sortType = sort\n\t\t}\n\t\tif (!params.currentPage) {\n\t\t\tparams.currentPage = 1\n\t\t}\n\t\tif (!params.categoryId) {\n\t\t\tparams.categoryId = 0;\n\t\t}\n\t\tdispatch(setFilters({\n\t\t\tsearchValue: params.searchValue,\n\t\t\tcurrentPage: params.currentPage,\n\t\t\tcategoryId: params.categoryId,\n\t\t\tsortType: params.sortType\n\t\t})\n\t\t)\n\t\tisSearch.current = true\n\t}\n\n\t//On first render componnent. if qs has data, pasre it to setterFilters\n\tReact.useEffect(() => {\n\t\tif (window.location.search)\n\t\t\tsetterFilters(window.location.search)\n\t}, [])\n\n\t//When change filter. ((TIP) On first render setterFilters change filter) if it's first render, get pizzas without search/qs params\n\tReact.useEffect(() => {\n\t\tif (!isSearch.current) {\n\t\t\tgetPizzas()\n\t\t}\n\t\twindow.scrollTo(0, 0)\n\t\tisSearch.current = false\n\t}, [categoryId, sortType, currentPage, searchValue])\n\n\t//When change filter. parse search data\n\tReact.useEffect(() => {\n\t\tif (isMount.current) {\n\t\t\tparseSearch()\n\t\t}\n\t\tisMount.current = true;\n\t}, [categoryId, sortType, currentPage, searchValue,])\n\n\tif (!listName.find(item => item.type === sortType.type)\n\t\t|| sortType === null\n\t\t|| !categoryId(categoryId < 0 || categoryId > 5)) {\n\t\treturn <NotFoundBlock />\n\t}\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className=\"content__top\">\n\t\t\t\t<Categories />\n\t\t\t\t<Sort />\n\t\t\t</div>\n\t\t\t<h1 className=\"content__title\">{categories[categoryId]}</h1>\n\t\t\t{status === 'reject'\n\t\t\t\t? <div className='content__error-info'>\n\t\t\t\t\t<h2>Произошла ошибка при загрузке пицц 😕</h2>\n\t\t\t\t\t<p>Попробуйте попытку позже</p>\n\t\t\t\t</div>\n\n\t\t\t\t: <div className=\"content__items\">\n\t\t\t\t\t{status === 'loading' ? skeletons : items.map((item: any) => <PizzaBlock key={item.id} {...item} />)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t<Pagination currentPage={currentPage} />\n\t\t</div>\n\t)\n}\n\nexport default Home"],"mappings":"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"},"metadata":{},"sourceType":"module"}