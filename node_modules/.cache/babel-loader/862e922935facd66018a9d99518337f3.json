{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  categoryId: 0,\n  sortType: {\n    name: 'популярные',\n    type: 'raiting'\n  },\n  currentPage: 1,\n  searchValue: ''\n};\nexport const filterSlice = createSlice({\n  name: 'filterer',\n  initialState,\n  reducers: {\n    onChangeCategoryId: (state, action) => {\n      state.categoryId = action.payload;\n    },\n    onChangeSortType: (state, action) => {\n      state.sortType = action.payload;\n    },\n    onChangeCurrentPage: (state, action) => {\n      state.currentPage = action.payload;\n    },\n    onSearch: (state, action) => {\n      state.searchValue = action.payload;\n    },\n    setFilters: (state, action) => {\n      state.categoryId = Number(action.payload.categoryId);\n      state.currentPage = Number(action.payload.currentPage);\n      state.sortType = action.payload.sortType;\n      state.searchValue = action.payload.searchValue;\n    }\n  }\n});\nexport const selectSortType = state => state.filterer.sortType;\nexport const {\n  onChangeCategoryId,\n  onChangeSortType,\n  onChangeCurrentPage,\n  onSearch,\n  setFilters\n} = filterSlice.actions;\nexport default filterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","categoryId","sortType","name","type","currentPage","searchValue","filterSlice","reducers","onChangeCategoryId","state","action","payload","onChangeSortType","onChangeCurrentPage","onSearch","setFilters","Number","selectSortType","filterer","actions","reducer"],"sources":["/Users/maksimdimitrak/Desktop/Programming/portfolio/react_pizza/src/redux/slices/filterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n\tcategoryId: 0,\n\tsortType: { name: 'популярные', type: 'raiting' },\n\tcurrentPage: 1,\n\tsearchValue: '',\n}\n\nexport const filterSlice = createSlice({\n\tname: 'filterer',\n\tinitialState,\n\treducers: {\n\t\tonChangeCategoryId: (state, action) => {\n\t\t\tstate.categoryId = action.payload\n\t\t},\n\t\tonChangeSortType: (state, action) => {\n\t\t\tstate.sortType = action.payload\n\t\t},\n\t\tonChangeCurrentPage: (state, action) => {\n\t\t\tstate.currentPage = action.payload\n\t\t},\n\t\tonSearch: (state, action) => {\n\t\t\tstate.searchValue = action.payload\n\t\t},\n\t\tsetFilters: (state, action) => {\n\t\t\tstate.categoryId = Number(action.payload.categoryId)\n\t\t\tstate.currentPage = Number(action.payload.currentPage)\n\t\t\tstate.sortType = action.payload.sortType\n\t\t\tstate.searchValue = action.payload.searchValue\n\t\t}\n\t},\n})\n\nexport const selectSortType = state => state.filterer.sortType\n\nexport const {\n\tonChangeCategoryId,\n\tonChangeSortType,\n\tonChangeCurrentPage,\n\tonSearch,\n\tsetFilters,\n} = filterSlice.actions\n\nexport default filterSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACpBC,UAAU,EAAE,CADQ;EAEpBC,QAAQ,EAAE;IAAEC,IAAI,EAAE,YAAR;IAAsBC,IAAI,EAAE;EAA5B,CAFU;EAGpBC,WAAW,EAAE,CAHO;EAIpBC,WAAW,EAAE;AAJO,CAArB;AAOA,OAAO,MAAMC,WAAW,GAAGR,WAAW,CAAC;EACtCI,IAAI,EAAE,UADgC;EAEtCH,YAFsC;EAGtCQ,QAAQ,EAAE;IACTC,kBAAkB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACtCD,KAAK,CAACT,UAAN,GAAmBU,MAAM,CAACC,OAA1B;IACA,CAHQ;IAITC,gBAAgB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MACpCD,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;IACA,CANQ;IAOTE,mBAAmB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACvCD,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAA3B;IACA,CATQ;IAUTG,QAAQ,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAA3B;IACA,CAZQ;IAaTI,UAAU,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACT,UAAN,GAAmBgB,MAAM,CAACN,MAAM,CAACC,OAAP,CAAeX,UAAhB,CAAzB;MACAS,KAAK,CAACL,WAAN,GAAoBY,MAAM,CAACN,MAAM,CAACC,OAAP,CAAeP,WAAhB,CAA1B;MACAK,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAP,CAAeV,QAAhC;MACAQ,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACC,OAAP,CAAeN,WAAnC;IACA;EAlBQ;AAH4B,CAAD,CAA/B;AAyBP,OAAO,MAAMY,cAAc,GAAGR,KAAK,IAAIA,KAAK,CAACS,QAAN,CAAejB,QAA/C;AAEP,OAAO,MAAM;EACZO,kBADY;EAEZI,gBAFY;EAGZC,mBAHY;EAIZC,QAJY;EAKZC;AALY,IAMTT,WAAW,CAACa,OANT;AAQP,eAAeb,WAAW,CAACc,OAA3B"},"metadata":{},"sourceType":"module"}